{"version":3,"sources":["services/movies-api.js","Components/Button/Button.js","Components/Button/Button.module.css","Components/SearchBar/SearchBar.module.css","Components/SearchBar/SearchBar.js","views/MoviesPage/MoviesPage.js"],"names":["KEY","axios","defaults","baseURL","fetchTrendingMovies","a","page","get","results","data","console","log","message","fetchMovies","query","fetchMovieDetails","movieId","response","fetchMovieCast","result","cast","fetchMovieReview","fetchMoviesAPI","Button","onLoadMore","type","className","s","onClick","module","exports","Searchbar","onSubmit","useState","setQuery","history","useHistory","location","useLocation","SearchForm","e","preventDefault","trim","toast","error","push","search","SearchFormButton","SearchFormButtonLabel","name","value","onChange","target","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","MoviesPage","movies","setMovies","setPage","loading","setLoading","URLSearchParams","MovieList","lazy","useEffect","fetchSearchMovies","scrollWindow","window","scrollTo","top","document","documentElement","scrollHeight","behavior","moviesListNotEmpty","length","loadMoreMovies","fallback","Loader","exact","path","SearchBar","prev"],"mappings":"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","file":"static/js/movies-view.097ac9f3.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst KEY = '5108029e3911ea6cb16f2c405843061d'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org'\n\nconst fetchTrendingMovies = async (page = 1) => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/3/trending/all/day?api_key=${KEY}&page=${page}`)\n    return results\n  } catch (err) {\n    console.log(err.message)\n  }\n}\n\nconst fetchMovies = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n    )\n\n    return data.results\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `/3/movie/${movieId}?api_key=${KEY}&language=en-US`,\n    )\n    return response.data\n  } catch (err) {\n    console.log(err.message)\n  }\n}\n\nconst fetchMovieCast = async (movieId) => {\n  try {\n    const result = await axios.get(\n      `/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n    )\n    return result.data.cast\n  } catch (err) {\n    console.log(err.message)\n  }\n}\n\nconst fetchMovieReview = async (movieId) => {\n  try {\n    const { data } = await axios.get(\n      `/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`,\n    )\n    return data.results\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nconst fetchMoviesAPI = {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchTrendingMovies,\n  fetchMovieCast,\n  fetchMovieReview,\n}\n\nexport default fetchMoviesAPI\n","import s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={() => onLoadMore()}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3OBlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__2Qckl\",\"SearchForm\":\"SearchBar_SearchForm__R51D6\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1FF_5\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__2OxS4\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1mJSE\"};","import { useState } from \"react\";\nimport s from \"./SearchBar.module.css\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleQueryChange = (e) => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim() === \"\") {\n      return toast.error(\"Enter your query!\");\n    }\n    history.push({ ...location, search: `query=${query}` });\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <div>\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            name=\"query\"\n            value={query}\n            onChange={handleQueryChange}\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react'\n\nimport fetchMoviesAPI from '../../services/movies-api'\nimport PropTypes from 'prop-types'\nimport Loader from '../../Components/Loader/Loader'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\n\nimport Button from '../../Components/Button/Button'\n\nimport { Route, useLocation } from 'react-router-dom'\nimport { Suspense, lazy } from 'react'\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('')\n  const [movies, setMovies] = useState([])\n\n  const [page, setPage] = useState(1)\n  const [loading, setLoading] = useState(false)\n  // const { path } = useParams()\n  const location = useLocation()\n  const search = new URLSearchParams(location.search).get('query') ?? ''\n\n  // const MovieDetailsPage = lazy(() =>\n  //   import('../MovieDetailsPage/MovieDetailsPage'),\n  // )\n  const MovieList = lazy(() => import('../../Components/MoviesList/MoviesList'))\n\n  const handleFormSubmit = (query) => {\n    setQuery(query)\n    setMovies([])\n  }\n\n  useEffect(() => {\n    if (!search) return\n    setLoading(true)\n\n    const fetchSearchMovies = async () => {\n      try {\n        const results = await fetchMoviesAPI.fetchMovies(search, query, page)\n        setMovies((movies) => [...movies, ...results])\n        if (page !== 1) {\n          scrollWindow()\n        }\n      } catch (err) {\n        console.log(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n    fetchSearchMovies()\n  }, [page, query, search])\n\n  const loadMore = () => {\n    setLoading(!loading)\n    setPage((prev) => prev + 1)\n    setLoading(loading)\n  }\n\n  const scrollWindow = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    })\n  }\n\n  const moviesListNotEmpty = movies.length !== 0\n  const loadMoreMovies = movies.length > 0 && movies.length >= 20\n\n  return (\n    <>\n      <Suspense fallback={<Loader />}>\n        {/* <Switch> */}\n        {/* <Route path={`${path}/:movieId`}>\n              <MovieDetailsPage />\n            </Route> */}\n        <Route exact path=\"/movies\">\n          <SearchBar onSubmit={handleFormSubmit} />\n          {moviesListNotEmpty && <MovieList movies={movies} />}\n          {/* {noMovies && <NotFound/>} */}\n        </Route>\n        {/* </Switch> */}\n      </Suspense>\n      {loadMoreMovies && <Button onLoadMore={loadMore} />}\n    </>\n  )\n}\n\nMoviesPage.propTypes = {\n  onSubmit: PropTypes.func,\n  onLoadMore: PropTypes.func,\n}\n\nexport default MoviesPage\n"],"sourceRoot":""}